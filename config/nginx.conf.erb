daemon off;
worker_processes auto;

events {
   use epoll;
   accept_mutex on;
   worker_connections 1024;
   multi_accept on;
}

http {
   server_tokens off;
   gzip on;
   gzip_min_length 250;

   access_log off;
   error_log logs/nginx/error.log crit;

   include mime.types;
   default_type application/octet-stream;

   upstream app_server {
      server unix:/tmp/nginx.socket fail_timeout=0;
   }

   server {
      listen <%= ENV["PORT"] %>;
      server_name example.com default_server;

      location / {
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://127.0.0.1:5000;
      }

      location /socket.io {
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_http_version 1.1;
          proxy_buffering off;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_pass http://127.0.0.1:5000/socket.io;
      }
   }
}